#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

int abs_diff(int a, int b) {
    return abs(a - b);
}

void sortTracks(int tracks[], int n) {
	int i,j;
    for ( i = 0; i < n - 1; i++) {
        for ( j = 0; j < n - i - 1; j++) {
            if (tracks[j] > tracks[j + 1]) {
                int temp = tracks[j];
                tracks[j] = tracks[j + 1];
                tracks[j + 1] = temp;
            }
        }
    }
}

void scanDisk(int tracks[], int n, int head, bool direction) {
    int total_tracks = n + 2; // Including head position and end tracks

    sortTracks(tracks, n);

    int i, index, position = 0;
    int total_movement = 0;

    if (direction) {
        index = 0;
        while (index < n && tracks[index] < head) {
            index++;
        }

        // Moving towards higher track numbers
        for (i = index; i < n; i++) {
            total_movement += abs_diff(head, tracks[i]);
            printf(" -> %d", tracks[i]);
            head = tracks[i];
        }

        // Moving to the last track
        total_movement += abs_diff(head, total_tracks - 1);
        printf(" -> %d", total_tracks - 1);
        head = total_tracks - 1;

        // Moving back towards lower track numbers
        for (i = index - 1; i >= 0; i--) {
            total_movement += abs_diff(head, tracks[i]);
            printf(" -> %d", tracks[i]);
            head = tracks[i];
        }
    } else {
        index = n - 1;
        while (index >= 0 && tracks[index] > head) {
            index--;
        }

        // Moving towards lower track numbers
        for (i = index; i >= 0; i--) {
            total_movement += abs_diff(head, tracks[i]);
            printf(" -> %d", tracks[i]);
            head = tracks[i];
        }

        // Moving to the first track
        total_movement += abs_diff(head, 0);
        printf(" -> %d", 0);
        head = 0;

        // Moving back towards higher track numbers
        for (i = index + 1; i < n; i++) {
            total_movement += abs_diff(head, tracks[i]);
            printf(" -> %d", tracks[i]);
            head = tracks[i];
        }
    }

    printf("\n\nTotal head movement: %d\n", total_movement);
}

int main() {
    int tracks[20];
    int n, head, i;

    printf("Enter the number of tracks: ");
    scanf("%d", &n);

    printf("Enter the track positions: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &tracks[i]);
    }

    printf("Enter the initial head position: ");
    scanf("%d", &head);

    printf("\nSequence of track movements:");

    // Assuming head moves to the right direction first
    printf("\nMoving Right:");
    scanDisk(tracks, n, head, true);

    // Now, head moves to the left direction
    printf("\nMoving Left:");
    scanDisk(tracks, n, head, false);

    return 0;
}
